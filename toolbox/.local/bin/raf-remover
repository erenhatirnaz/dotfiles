#!/bin/bash
#             __
#  _ __ __ _ / _|      _ __ ___ _ __ ___   _____   _____ _ __
# | '__/ _` | |_ _____| '__/ _ \ '_ ` _ \ / _ \ \ / / _ \ '__|
# | | | (_| |  _|_____| | |  __/ | | | | | (_) \ V /  __/ |
# |_|  \__,_|_|       |_|  \___|_| |_| |_|\___/ \_/ \___|_|
#
# script      : raf-remover
# version     : 1.1.0
# description : A script that deletes the raf file if jpeg file with the same
#               name doesn't exist in given directory
# author      : eren hatırnaz <erenhatirnaz@hotmail.com.tr> [GPG: 0x8e64942a]
# source      : https://github.com/erenhatirnaz/dotfiles
# dependency  : sed, find
# license     : gnu general public license v3
# | copyright (c) 2024 eren hatırnaz
# |
# | this program is free software: you can redistribute it and/or modify
# | it under the terms of the gnu general public license as published by
# | the free software foundation, either version 3 of the license, or
# | (at your option) any later version.
# |
# | this program is distributed in the hope that it will be useful,
# | but without any warranty; without even the implied warranty of
# | merchantability or fitness for a particular purpose.  see the
# | gnu general public license for more details.
# |
# | you should have received a copy of the gnu general public license
# | along with this program.  if not, see <https://www.gnu.org/licenses/>.

readonly script=$(basename "$0")
readonly version="1.1.0"

_print_help() {
	cat <<-EOF
	Usage: ${script} [OPTIONS] [DIRECTORY]
	Deletes the RAF file if JPG/JPEG file with the same name doesn't exist in given
	DIRECTORY. The DIRECTORY is optional argument, default value is current
	directory.

	Options:
	  -n, --no-confirm Don't ask for confirmation
	  -v, --version    Show ${script} version number
	  -h, --help       Show this help message
	EOF
}

_print_version() {
	echo "${script} version ${version}"
}

_parse_arguments() {
	no_confirm=false
	directory="."

	while [[ $# -gt 0 ]]; do
		case $1 in
			-n|--no-confirm) no_confirm=true; shift ;;
			-v|--version) _print_version; exit ;;
			-h|--help) _print_help; exit ;;
			*) directory="${1%/}"; shift ;;
		esac
	done

	# input validation
	if [[ ! -d "$directory" ]]; then
		echo "${script}: cannot access '$directory': No such directory" >&2
		exit 1
	fi
}

main() {
  _parse_arguments "$@"

	shopt -s nocaseglob
	raf_file_count=$(ls -1 $directory/*.raf 2>/dev/null | wc -l)
	if [[ $raf_file_count == 0 ]]; then
		echo "${script}: directory doesn't contains any raf file" >&2
		exit
	fi

	raf_files_to_delete=()

	for raf_file in $directory/*.raf; do
		jpg_file=$(sed 's/raf/jpg/I' <<< $raf_file)
		jpeg_file=$(sed 's/raf/jpeg/I' <<< $raf_file)


		if [[ ! -f $(find $directory -maxdepth 1 -iwholename $jpg_file) &&
					! -f $(find $directory -maxdepth 1 -iwholename $jpeg_file) ]];
		then
			raf_files_to_delete+=("$raf_file")
		fi
	done

	if [[ ${#raf_files_to_delete[@]} -eq 0 ]]; then
		echo "${script}: RAF files that need to be deleted were not found."
		exit
	fi

	echo "${script}: list of files marked to delete: ${raf_files_to_delete[@]}"

	if ! $no_confirm; then
		echo
		read -rp "Total ${#raf_files_to_delete[@]} raf files will be deleted. Are you sure? [y/N]: " -n1 choice
		choice=${choice:-n}
		[[ ! $choice =~ [Yy]$ ]] && echo && exit 0
		echo
	fi

	rm "${raf_files_to_delete[@]}"
	echo "${script}: ${#raf_files_to_delete[@]} raf files deleted."
	exit 0
}

main "$@"
