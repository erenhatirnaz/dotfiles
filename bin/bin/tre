#!/bin/bash
#  _
# | |_ _ __ ___
# | __| '__/ _ \
# | |_| | |  __/
#  \__|_|  \___|
#
# script      : tre
# version     : 1.0.0
# description : shorthand for tree
# author      : eren hatırnaz <erenhatirnaz@hotmail.com.tr> [GPG: 0x8e64942a]
# source      : https://github.com/erenhatirnaz/dotfiles
# depends     :
# |+ tree from tree
# |+ less from less
# |+ basename, cat and echo from coreutils
# license     : gnu general public license v3
# | copyright (c) 2019 eren hatırnaz
# |
# | this program is free software: you can redistribute it and/or modify
# | it under the terms of the gnu general public license as published by
# | the free software foundation, either version 3 of the license, or
# | (at your option) any later version.
# |
# | this program is distributed in the hope that it will be useful,
# | but without any warranty; without even the implied warranty of
# | merchantability or fitness for a particular purpose.  see the
# | gnu general public license for more details.
# |
# | you should have received a copy of the gnu general public license
# | along with this program.  if not, see <https://www.gnu.org/licenses/>.

readonly script=$(basename "$0")
readonly version="1.0.0"

_print_help() {
	cat <<-EOF
	Usage: ${script} [DIR]
	Tre is a shorthand for tree with hidden files and color enabled, ignoring some
	developer environment directories (such as .git, node_modules), listing
	directories first. The output gets piped into \`less\` with options to
	preserve color and line numbers, unless the output small enough for one
	screen.

	Options:
	  -v, --version    Show ${script} version number
	  -h, --help       Show this help message
	EOF
}

_print_version() {
	echo "${script} version ${version}"
}

[[ "$1" =~ ^(-v|--version)$ ]] && _print_version && exit
[[ "$1" =~ ^(-h|--help)$ ]] && _print_help && exit

if [[ -f "$1" ]]; then
	echo "${script}: \`${1}\` is not a directory" >&2
	exit 1
fi

excluded='.git|node_modules|bower_components|.vscode'
tree -aC -I ${excluded} --dirsfirst "$@" | less -FRNX
