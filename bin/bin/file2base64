#!/bin/bash
#   __ _ _      ____  _                     __   _  _
#  / _(_) | ___|___ \| |__   __ _ ___  ___ / /_ | || |
# | |_| | |/ _ \ __) | '_ \ / _` / __|/ _ \ '_ \| || |_
# |  _| | |  __// __/| |_) | (_| \__ \  __/ (_) |__   _|
# |_| |_|_|\___|_____|_.__/ \__,_|___/\___|\___/   |_|
#
# script       : file2base64
# version      : 1.0.0
# description  : converts file content to base64 hash
# author       : eren hatırnaz <erenhatirnaz@hotmail.com.tr> [GPG: 0x8e64942a]
# source       : https://github.com/erenhatirnaz/scripts
# depends      :
# |+ openssl from openssl
# |+ file from file
# |+ basename, cat and echo from coreutils
# license      : gnu general public license v3.0
# | copyright (c) 2019 eren hatırnaz
# |
# | this program is free software: you can redistribute it and/or modify
# | it under the terms of the gnu general public license as published by
# | the free software foundation, either version 3 of the license, or
# | (at your option) any later version.
# |
# | this program is distributed in the hope that it will be useful,
# | but without any warranty; without even the implied warranty of
# | merchantability or fitness for a particular purpose.  see the
# | gnu general public license for more details.
# |
# | you should have received a copy of the gnu general public license
# | along with this program.  if not, see <https://www.gnu.org/licenses/>.

readonly script=$(basename "$0")
readonly version="1.0.0"

_print_help() {
	cat <<-EOF
	Usage: ${script} [OPTIONS] FILE
	Converts the FILE contents to Base64 hash.

	Options:
	  -w, --with-url    Prints Base64 hash with \`data:\` url
	  -v, --version     Show ${script} version number
	  -h, --help        Show this help message
	EOF
}

_print_version() {
	echo "${script} version ${version}"
}

_die() {
	local -r message="$1"
	local -r be_helpful="${2:-true}"

	echo "${script}: ${message}" >&2
	$be_helpful &&\
		echo "Try '${script} --help' for more information."
	exit 1
}

with_url="false"

while [[ $# -gt 0 ]]; do
	case $1 in
		-w|--with-url) with_url=true; shift ;;
		-v|--version) _print_version; exit ;;
		-h|--help) _print_help; exit ;;
		*) file="$1"; shift ;;
	esac
done

[[ -z "$file" ]] && _die "missing operand"
[[ -d "$file" ]] && _die "$file: is a directory"
[[ ! -f "$file" ]] &&\
	_die "cannot access '$file': No such file or directory" false

if $with_url; then
	mimetype=$(file -b --mime-type "$file")
	if [[ "$mimetype" == "text/*" ]]; then
		mimetype="${mimetype};charset=utf-8"
	fi
	url_part="data:${mimetype};base64,"
fi

encoded=$(openssl base64 -in "$file" | tr -d '\n')
echo "${url_part}${encoded}"
